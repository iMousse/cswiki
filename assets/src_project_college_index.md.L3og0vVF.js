import{_ as i,c as l,o as a,V as p}from"./chunks/framework.syB9hai_.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"src/project/college/index.md","filePath":"src/project/college/index.md","lastUpdated":1730652800000}'),e={name:"src/project/college/index.md"},t=p('<p>视频</p><p><a href="https://www.bilibili.com/video/BV1dQ4y1A75e/?spm_id_from=333.788.recommend_more_video.1&amp;vd_source=ec278794de0ffb1a0b2ecb85da63c11a" target="_blank" rel="noreferrer">尚硅谷_谷粒学苑-微服务+全栈在线教育实战项目_哔哩哔哩_bilibili</a></p><p>资料</p><p><a href="https://b11et3un53m.feishu.cn/wiki/wikcnrigEuKkRaba6YaZubSuINf" target="_blank" rel="noreferrer">天机学堂讲义</a></p><h2 id="天机学堂" tabindex="-1">天机学堂 <a class="header-anchor" href="#天机学堂" aria-label="Permalink to &quot;天机学堂&quot;">​</a></h2><p>完成比完美更重要！！！</p><p>解题思路比解决方案更重要！！！</p><p>在项目的开发过程中，好的思路是可以借鉴的，并且是不断迭代的，而不是一蹴而就的。</p><h3 id="总体计划" tabindex="-1">总体计划 <a class="header-anchor" href="#总体计划" aria-label="Permalink to &quot;总体计划&quot;">​</a></h3><ul><li>谷粒学堂单体版文档整理</li><li>天机学堂单体版</li><li>天机学堂微服务版</li><li>天机学堂多租户单体版：需要自己设计表结构和页面，难度较大</li></ul><h3 id="问题记录" tabindex="-1">问题记录 <a class="header-anchor" href="#问题记录" aria-label="Permalink to &quot;问题记录&quot;">​</a></h3><p>描述：renren-api中错误日志没有打印</p><p>原因：在 RenExceptionHandler 的 handleException 中没有打印错误日志的方法 ！！！</p><p>描述：Springboot 后端跨域addCorsMappings与拦截器冲突导致跨域失效</p><p>原因：<a href="https://blog.csdn.net/weixin_41896463/article/details/109580144" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_41896463/article/details/109580144</a></p><p>描述：The dependencies of some of the beans in the application context form a cycle:</p><p>原因：Bean的注入方式均为**@AllArgsConstructor**使用了基于构造器依赖注入的方式，并且造成了循环依赖</p><p>解决：方式有三种</p><h3 id="开发计划" tabindex="-1">开发计划 <a class="header-anchor" href="#开发计划" aria-label="Permalink to &quot;开发计划&quot;">​</a></h3><h4 id="后台功能" tabindex="-1">后台功能 <a class="header-anchor" href="#后台功能" aria-label="Permalink to &quot;后台功能&quot;">​</a></h4><p>媒资管理：</p><ul><li>预览重新打开视频还是停留原先的视频</li><li>上传列表的分页有问题</li><li>保存视频 @Validated 没有生效</li><li>媒资引用次数，只有课程上架了才能计算媒资引用次数</li></ul><p>课程分类：禁用和启用功能</p><ul><li>全职业技能培训还是专注于计算机技能培训</li></ul><p>题目管理：</p><ul><li>不定项选择题答题规则，</li><li>BOSS直聘上去看答题</li><li>题目是否要加入课程字段，是否有数据权限</li><li>✅设置题目弹框的参数校验不合法</li></ul><p>教师管理</p><ul><li>✅教师的新增和修改功能完善</li><li>✅系统用户和老师绑定，并设置默认密码</li></ul><p>学员管理：</p><ul><li>学员查询和重置密码</li></ul><p>课程管理：</p><ul><li>✅视频上传做校验，不能有相同视频播放</li><li>✅题目选择，答案展示错误</li><li>✅教师选择，展示头像和手机号</li><li>课程没有上架之前媒资引用不会统计，所以媒资可以删除。所以需要在上架对媒资进行验证</li><li>课程上架校验</li></ul><p>个人界面：</p><ul><li>个人界面的设置</li></ul><p>优惠券管理：</p><p>问答管理：</p><p>笔记管理：</p><p>订单管理：</p><p>退款管理：</p><h4 id="前台功能" tabindex="-1">前台功能 <a class="header-anchor" href="#前台功能" aria-label="Permalink to &quot;前台功能&quot;">​</a></h4><p>支付功能：</p><p>登陆注册：</p><p>课程搜索：课程的搜索，课程的广告推荐</p><p>首页推荐：精品好课，通过kafka steam流进行计算。</p><p>用户行为：点赞，评论，阅读，</p><p>前台分类：按照课程数量和热度进行排序来展示</p><p>轮播图：新增轮播图展示和设计</p><p>用户评价：实现用户评价功能</p><p>常见问题：在问答中将点赞数最多的问题展示到常见问题中</p><p>我的收藏：对课程进行收藏实现</p><p>猜你喜欢：推荐系统进行实现</p><p>我的考试：不定项选择题，主观题，后台阅卷和批试卷。</p><p>购买功能：</p><p>订单功能：</p><p>积分功能：</p><h3 id="功能优化" tabindex="-1">功能优化 <a class="header-anchor" href="#功能优化" aria-label="Permalink to &quot;功能优化&quot;">​</a></h3><p>api 模块新增 creator updater 字段填充</p><p>api 模块登陆 将 UserId 添加到 UserContext ThreadLocal中，通过注解的方式拦截和通过路径的方式拦截</p><p>oss 模块，新增一个vod模块，oss模块笔记记录</p><p>将系统中的 Date 改成 LocalDateTime</p><p>小节下的题目，可以优化成 mongodb</p><p>定时任务 job 模块研究并修改，新增 redis 模块</p><p>返回信息带上Result还是不带上Result</p><p>课程分类模块优化</p><p>购物车模块优化</p><p>兴趣分类缓存</p><p>项目结构划分：</p><p>搜索排序设计：</p><p>命名规则优化：</p><ul><li>前端：在api里的接口需要以api为后缀</li><li>后端：在controller层先创建基础的crud，其他方法在crud的后面</li></ul><p>分类字段设计：采用三个字段记录数据还是采用一个字段记录数据</p><p>冗余字段设计：</p><ul><li>课程中的课程课时 <ul><li>冗余字段，发布修改。在设置课程或者最终完成的时候通过计算，将总共课时计算录入数据库中。 <ul><li>减少了在查询时所消耗的开销，但是增加了数据库的存储，并且课时数由于不是实时计算可能会产生脏数据</li></ul></li><li>直接查询。通过查询课时来统计数据。 <ul><li>保证了数据的正确性，但是增加系统的复杂度和查询所消费的开销。</li></ul></li></ul></li><li>课程中的报名人数 <ul><li>冗余字段，购买后修改：因为报名人数是会实时变化，并且在产生报名人数不断增加的情况下，如果还是按照查询的方式来进行统计，则会造成数据库查询压力的增大。 <ul><li>优化方案：将数据进行冷热分离，冷数据还是在购买后修改报名人数，热数据将大量购买的记录修改缓存起来，然后进行批量之行</li></ul></li><li>直接查询。</li></ul></li></ul><p>优化前端需要翻译的字段</p><ul><li><p>字典的翻译</p><ul><li>可以通过枚举的方法</li><li>通过切面的方法实现</li></ul></li><li><p>查表的翻译</p></li></ul><h4 id="前端优化" tabindex="-1">前端优化 <a class="header-anchor" href="#前端优化" aria-label="Permalink to &quot;前端优化&quot;">​</a></h4><p>在api中，调用后台的接口都以 api 结束</p><p>方法上的prop 用 click结尾，方法用 handle 结尾</p><p>比如</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">el-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button primary&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> @click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;searchHandle&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;搜索&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">el-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="人人系统" tabindex="-1">人人系统 <a class="header-anchor" href="#人人系统" aria-label="Permalink to &quot;人人系统&quot;">​</a></h3><p>系统说明书，系统的设计，系统的如何使用</p><p>Service优化，分页的优化</p><p>页面优化：个人信息新增界面</p><p>描述：在路由中新增一个通用路由，类似于 404，然后设置个人信息，将个人信息优化。【可将优化应用人人开源】</p><p>Service优化，分页的优化</p>',86),s=[t];function r(n,o,h,d,c,u){return a(),l("div",null,s)}const _=i(e,[["render",r]]);export{b as __pageData,_ as default};
