import{_ as g,E as e,c as p,J as d,w as E,m as s,a as h,V as l,o as a,b as o,e as c}from"./chunks/framework.syB9hai_.js";const y="/cswiki/assets/1663054702431-f07ebe74-2897-4678-b712-89651663017a.WncA4k9Y.gif",F="/cswiki/assets/1665457114129-8f54e80a-3f7c-480d-906f-e08ef182da7b.F0mPRq8z.png",m="/cswiki/assets/1665713490597-11282e05-d6f4-49f4-862a-dcf0a953aa74.7oH0Ifpu.png",u="/cswiki/assets/1665718695596-41a7353a-a858-4d0a-99ec-ff4df7bd95d1.pBrU__2v.png",C="/cswiki/assets/1665719184394-1795f164-604b-4c55-ab47-0a282cf9312f.JxQQ7ax-.png",T="/cswiki/assets/1665730687617-25502471-f2ae-418b-9de3-b7996d55aa92.oxkpVffX.png",b="/cswiki/assets/1665730827378-5283cb34-bf3a-4959-b5c3-c251870c6d79.ktCeDTyL.png",_="/cswiki/assets/1665730956478-958196cb-1aef-4f24-a64f-7ec45e7fd6e5.vjUchVll.png",A="/cswiki/assets/1665731011719-861d7c86-f696-4d0c-8265-5199890ddd25.6EXMAdfi.png",f="/cswiki/assets/1665732664103-806504aa-709d-4592-8b90-1dc73933df56.lVHLD8o-.png",Q="/cswiki/assets/1665734251521-3d3830c0-0909-4dd6-b454-62e6860b33d4.qYrDSWON.png",B="/cswiki/assets/1665734837159-06c3759c-59bb-471c-ba1a-54d85e027453.p9Kh10G8.png",D="/cswiki/assets/1665736710572-73b4d2e4-159f-4aa2-983d-792c8e2083c3.R-VjQIxB.png",q="/cswiki/assets/1665757134198-27c16be2-9e1d-48a4-a8a3-b3b0f125b870.Pe3lONHF.png",w="/cswiki/assets/1665758961482-31458a4c-eeee-4ffe-8485-8034464be829.vZriEZs4.png",L="/cswiki/assets/1665759022999-35b70e1d-f691-4839-b614-196c19e1f2c3.uI0FyFe0.png",v="/cswiki/assets/1665761796118-02380a03-a66d-4360-8262-6bd9e7e90db0.FpXN0rwD.png",S="/cswiki/assets/1665761915494-2165047d-d9b7-44c7-b681-56bc0cceb7c3.t7EnQoCX.png",G="/cswiki/assets/1665761860314-c6669d51-b30b-4ab2-b38b-768dcf056321.N1bCsVZM.png",P="/cswiki/assets/1665762220352-ca29ff53-65b5-41f8-8ec5-22804d3a0b14.dPJLOO07.png",x="/cswiki/assets/1665762302983-e9799d67-5ce5-4820-ac4d-88b92644f9e3.AzA76A2G.png",O="/cswiki/assets/1665762338843-14e8fef9-39ea-47ab-941e-7fbeae56d912.rnzEbLAS.png",R="/cswiki/assets/1665762353846-71fab462-eaf1-4d6e-aefd-edb2617b1419.1Agmv9m_.png",M="/cswiki/assets/1665762156480-7420a34b-8f14-4906-8c9a-6001c285536f.R-fMB-c7.png",I="/cswiki/assets/1665762476313-1ae6a64b-d903-41b2-ba66-7b295b619220.X6aoeICR.png",z="/cswiki/assets/1665806359627-f2bc61f7-62c0-425d-b36e-2150c9f9cf90.ESh-fibw.png",N="/cswiki/assets/1665806483716-970f2477-c3f0-4862-98cf-c404aee123d3.UxM9_HEv.png",H="/cswiki/assets/1665817027063-8dfabe2a-c38d-4dca-8270-d489d90a9dae.q9MVB4Y1.png",Z="/cswiki/assets/1665817915313-275041aa-123c-47fc-a155-308fe4b007e4.rNLAKNSL.png",j="/cswiki/assets/1665820744968-6e9db592-ba30-4596-9f9f-33177539c89e.ZeflciKE.png",U="/cswiki/assets/1665821845095-f1c06252-e7b1-40f4-9dcc-9dc9b9f9a19f.egY_YJ6M.png",V="/cswiki/assets/1665821931309-0410b721-084d-4d11-97f5-89376b463b8e.kgTQJRU3.png",W="/cswiki/assets/1665822382586-481265e1-843c-486a-b847-ef8d41310ebd.CkZvXKlT.png",Y="/cswiki/assets/1665822458416-42250bcf-800b-4990-b032-301d1192ec84.4D98iQDd.png",$="/cswiki/assets/1665822528883-d5ea8dc2-1dd6-4908-aab8-3669d2839dd6.--XyCeHs.png",J="/cswiki/assets/1665822607797-7c98ffd4-a4eb-4556-abd7-75db0d111c78.qjXLof0o.png",X="/cswiki/assets/1665845455649-0487b907-8c8d-42b7-979a-e36d72d20380.V8gqMrG_.png",K="/cswiki/assets/1665845518413-a6d23451-c723-47c1-b8ae-62688a74994f.y8q0gfBz.png",ss="/cswiki/assets/1665845769585-55bf9a62-9aa9-4668-be3f-8bdf950e079d.mKThl0JY.png",is="/cswiki/assets/1665845821820-4b51060d-c699-4ec5-9bc5-984003d1db15.XC1mFWj3.png",as="/cswiki/assets/1665845875609-784508e6-7e83-4b46-a056-888f5581272c.zlzDbicm.png",ls="/cswiki/assets/1665845974023-d8178d4c-5df9-48a6-95bb-53b0e5e11f72.p13-Gz1B.png",_s=JSON.parse('{"title":"项目运维","description":"","frontmatter":{},"headers":[],"relativePath":"src/project/express/11-项目运维.md","filePath":"src/project/express/11-项目运维.md","lastUpdated":1730648753000}'),ns={name:"src/project/express/11-项目运维.md"},ts=s("h1",{id:"项目运维",tabindex:"-1"},[h("项目运维 "),s("a",{class:"header-anchor",href:"#项目运维","aria-label":'Permalink to "项目运维"'},"​")],-1),es=l('<nav class="table-of-contents"><ul><li><a href="#项目运维">项目运维</a><ul><li><a href="#课程安排">课程安排</a></li><li><a href="#背景说明">背景说明</a><ul><li><a href="#日志问题">日志问题</a></li><li><a href="#调用链问题">调用链问题</a></li></ul></li><li><a href="#分布式日志">分布式日志</a><ul><li><a href="#实现思路">实现思路</a></li><li><a href="#为什么选择graylog">为什么选择GrayLog？</a></li><li><a href="#graylog简介">GrayLog简介</a></li><li><a href="#部署安装">部署安装</a></li><li><a href="#收集日志">收集日志</a><ul><li><a href="#配置inputs">配置Inputs</a></li><li><a href="#集成微服务">集成微服务</a></li></ul></li><li><a href="#日志回收策略">日志回收策略</a></li><li><a href="#搜索语法">搜索语法</a><ul><li><a href="#搜索语法-1">搜索语法</a></li><li><a href="#自定义展示字段">自定义展示字段</a></li></ul></li><li><a href="#日志统计仪表盘">日志统计仪表盘</a><ul><li><a href="#创建仪表盘">创建仪表盘</a></li></ul></li></ul></li><li><a href="#链路追踪">链路追踪</a><ul><li><a href="#apm">APM</a><ul><li><a href="#什么是apm">什么是APM</a></li><li><a href="#原理">原理</a></li><li><a href="#技术选型">技术选型</a></li></ul></li><li><a href="#skywalking简介">Skywalking简介</a></li><li><a href="#部署安装-1">部署安装</a></li><li><a href="#微服务探针">微服务探针</a></li><li><a href="#整合到docker服务">整合到docker服务</a></li></ul></li><li><a href="#练习">练习</a><ul><li><a href="#练习1">练习1</a></li><li><a href="#练习2">练习2</a></li></ul></li></ul></li></ul></nav><h2 id="课程安排" tabindex="-1">课程安排 <a class="header-anchor" href="#课程安排" aria-label="Permalink to &quot;课程安排&quot;">​</a></h2><ul><li>了解什么是分布式日志</li><li>Graylog的部署安装</li><li>使用Graylog进行日志收集</li><li>Graylog的搜索语法</li><li>了解什么是链路追踪</li><li>Skywalking的基本使用</li><li>整合微服务使用Skywalking</li><li>将Skywalking整合到Docker中</li></ul><h2 id="背景说明" tabindex="-1">背景说明 <a class="header-anchor" href="#背景说明" aria-label="Permalink to &quot;背景说明&quot;">​</a></h2><p>在微服务架构体系中，微服务上线后，有两个不容忽略的问题，一是日志该怎么存储、查看，二是如何在复杂的调用链中排查问题。 <img src="'+y+'" alt="kb.gif" loading="lazy"></p><h3 id="日志问题" tabindex="-1">日志问题 <a class="header-anchor" href="#日志问题" aria-label="Permalink to &quot;日志问题&quot;">​</a></h3><p>在微服务架构下，微服务被拆分成多个微小的服务，每个微小的服务都部署在不同的服务器实例上，当我们定位问题，检索日志的时候需要依次登录每台服务器进行检索。 这样是不是感觉很繁琐和效率低下？所以我们还需要一个工具来帮助集中收集、存储和搜索这些跟踪信息。 集中化管理日志后，日志的统计和检索又成为一件比较麻烦的事情。以前，我们通过使用grep、awk和wc等Linux命令能实现检索和统计，但是对于要求更高的查询、排序和统计等要求和庞大的机器数量依然使用这样的方法难免有点力不从心。 所以，需要通过<strong>分布式日志服务</strong>来帮我们解决上述问题的。</p><h3 id="调用链问题" tabindex="-1">调用链问题 <a class="header-anchor" href="#调用链问题" aria-label="Permalink to &quot;调用链问题&quot;">​</a></h3><p>在微服务架构下，如何排查异常的微服务，比如：发布新版本后发现系统处理用户请求变慢了，要想解决这个问首先是要找出“慢”的环节，此时就需要对整个微服务的调用链有清晰的监控，否则是不容易找出问题的。下面所展现的就是通过skywalking可以查看微服务的调用链，就会比较容易的找出问题： <img src="'+F+'" alt="image.png" loading="lazy"></p><h2 id="分布式日志" tabindex="-1">分布式日志 <a class="header-anchor" href="#分布式日志" aria-label="Permalink to &quot;分布式日志&quot;">​</a></h2><h3 id="实现思路" tabindex="-1">实现思路 <a class="header-anchor" href="#实现思路" aria-label="Permalink to &quot;实现思路&quot;">​</a></h3><p>分布式日志框架服务的实现思路基本是一致的，如下：</p><ul><li>**日志收集器：**微服务中引入日志客户端，将记录的日志发送到日志服务端的收集器，然后以某种方式存储</li><li>**数据存储：**一般使用ElasticSearch分布式存储，把收集器收集到的日志格式化，然后存储到分布式存储中</li><li>**web服务：**利用ElasticSearch的统计搜索功能，实现日志查询和报表输出</li></ul><p>比较知名的分布式日志服务包括：</p><ul><li>ELK：elasticsearch、Logstash、Kibana</li><li>GrayLog</li></ul><p>本课程主要是基于GrayLog讲解。</p><h3 id="为什么选择graylog" tabindex="-1">为什么选择GrayLog？ <a class="header-anchor" href="#为什么选择graylog" aria-label="Permalink to &quot;为什么选择GrayLog？&quot;">​</a></h3><p>业界比较知名的分布式日志服务解决方案是ELK，而我们今天要学习的是GrayLog。为什么呢？ ELK解决方案的问题：</p><ol><li>不能处理多行日志，比如Mysql慢查询，Tomcat/Jetty应用的Java异常打印</li><li>不能保留原始日志，只能把原始日志分字段保存，这样搜索日志结果是一堆Json格式文本，无法阅读。</li><li>不符合正则表达式匹配的日志行，被全部丢弃。</li></ol><p>GrayLog方案的优势：</p><ol><li>一体化方案，安装方便，不像ELK有3个独立系统间的集成问题。</li><li>采集原始日志，并可以事后再添加字段，比如http_status_code，response_time等等。</li><li>自己开发采集日志的脚本，并用curl/nc发送到Graylog Server，发送格式是自定义的GELF，Flunted和Logstash都有相应的输出GELF消息的插件。自己开发带来很大的自由度。实际上只需要用inotifywait监控日志的modify事件，并把日志的新增行用curl/netcat发送到Graylog Server就可。</li><li>搜索结果高亮显示，就像google一样。</li><li>搜索语法简单，比如： <code>source:mongo AND reponse_time_ms:&gt;5000</code>，避免直接输入elasticsearch搜索json语法</li><li>搜索条件可以导出为elasticsearch的搜索json文本，方便直接开发调用elasticsearch rest api的搜索脚本。</li></ol><h3 id="graylog简介" tabindex="-1">GrayLog简介 <a class="header-anchor" href="#graylog简介" aria-label="Permalink to &quot;GrayLog简介&quot;">​</a></h3><p>GrayLog是一个轻量型的分布式日志管理平台，一个开源的日志聚合、分析、审计、展示和预警工具。在功能上来说，和 ELK类似，但又比 ELK要简单轻量许多。依靠着更加简洁，高效，部署使用简单的优势很快受到许多公司的青睐。 官网：<a href="https://www.graylog.org/" target="_blank" rel="noreferrer">https://www.graylog.org/</a> 其基本框架如图： <img src="'+m+`" alt="image.png" loading="lazy"></p><p>流程如下：</p><ul><li>微服务中的GrayLog客户端发送日志到GrayLog服务端</li><li>GrayLog把日志信息格式化，存储到Elasticsearch</li><li>客户端通过浏览器访问GrayLog，GrayLog访问Elasticsearch</li></ul><p>这里MongoDB是用来存储GrayLog的配置信息的，这样搭建集群时，GrayLog的各节点可以共享配置。</p><h3 id="部署安装" tabindex="-1">部署安装 <a class="header-anchor" href="#部署安装" aria-label="Permalink to &quot;部署安装&quot;">​</a></h3><p>我们在虚拟机中选择使用Docker来安装。需要安装的包括：</p><ul><li>MongoDB：用来存储GrayLog的配置信息</li><li>Elasticsearch：用来存储日志信息</li><li>GrayLog：GrayLog服务端</li></ul><p>下面将通过docker的方式部署，镜像已经下载到101虚拟机中，部署脚本如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#部署Elasticsearch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> elasticsearch </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;discovery.type=single-node&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> es-data:/usr/share/elasticsearch/data </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> es-plugins:/usr/share/elasticsearch/plugins </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    --privileged</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:9200 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9300</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:9300 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elasticsearch:7.17.5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#部署MongoDB（使用之前部署的服务即可）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mongodb </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27017</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:27017 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--restart=always </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mongodb:/data/db </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MONGO_INITDB_ROOT_USERNAME=sl </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MONGO_INITDB_ROOT_PASSWORD=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123321</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mongo:4.4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#部署</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">graylog </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:9000 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12201</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:12201/udp </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_HTTP_EXTERNAL_URI=http://192.168.150.101:9000/ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_ELASTICSEARCH_HOSTS=http://192.168.150.101:9200/ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_ROOT_TIMEZONE=&quot;Asia/Shanghai&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_WEB_ENDPOINT_URI=&quot;http://192.168.150.101:9000/:9000/api&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_PASSWORD_SECRET=&quot;somepasswordpepper&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_ROOT_PASSWORD_SHA2=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GRAYLOG_MONGODB_URI=mongodb://sl:123321@192.168.150.101:27017/admin </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graylog/graylog:4.3</span></span></code></pre></div><p>命令解读：</p><ul><li>端口信息： <ul><li><code>-p 9000:9000</code>：GrayLog的http服务端口，9000</li><li><code>-p 12201:12201/udp</code>：GrayLog的GELF UDP协议端口，用于接收从微服务发来的日志信息</li></ul></li><li>环境变量 <ul><li><code>-e GRAYLOG_HTTP_EXTERNAL_URI</code>：对外开放的ip和端口信息，这里用9000端口</li><li><code>-e GRAYLOG_ELASTICSEARCH_HOSTS</code>：GrayLog依赖于ES，这里指定ES的地址</li><li><code>-e GRAYLOG_WEB_ENDPOINT_URI</code>：对外开放的API地址</li><li><code>-e GRAYLOG_PASSWORD_SECRET</code>：密码加密的秘钥</li><li><code>-e GRAYLOG_ROOT_PASSWORD_SHA2</code>：密码加密后的密文。明文是<code>admin</code>，账户也是<code>admin</code></li><li><code>-e GRAYLOG_ROOT_TIMEZONE=&quot;Asia/Shanghai&quot;</code>：GrayLog容器内时区</li><li><code>-e GRAYLOG_MONGODB_URI</code>：指定MongoDB的链接信息</li></ul></li><li><code>graylog/graylog:4.3</code>：使用的镜像名称，版本为4.3</li></ul><p>访问地址 <a href="http://192.168.150.101:9000/" target="_blank" rel="noreferrer">http://192.168.150.101:9000/</a> ， 如果可以看到如下界面说明启动成功。 <img src="`+u+'" alt="image.png" loading="lazy"></p><p>通过 <code>admin/admin</code>登录，即可看到欢迎页面，目前还没有数据： <img src="'+C+'" alt="image.png" loading="lazy"></p><h3 id="收集日志" tabindex="-1">收集日志 <a class="header-anchor" href="#收集日志" aria-label="Permalink to &quot;收集日志&quot;">​</a></h3><h4 id="配置inputs" tabindex="-1">配置Inputs <a class="header-anchor" href="#配置inputs" aria-label="Permalink to &quot;配置Inputs&quot;">​</a></h4><p>部署完成GrayLog后，需要配置Inputs才能接收微服务发来的日志数据。 第一步，在<code>System</code>菜单中选择<code>Inputs</code>： <img src="'+T+'" alt="image.png" loading="lazy"></p><p>第二步，在页面的下拉选框中，选择<code>GELF UDP</code>： <img src="'+b+'" alt="image.png" loading="lazy"></p><p>然后点击<code>Launch new input</code>按钮： <img src="'+_+'" alt="image.png" loading="lazy"></p><p>点击<code>save</code>保存： <img src="'+A+`" alt="image.png" loading="lazy"></p><p>可以看到，GELF UDP Inputs 保存成功。</p><h4 id="集成微服务" tabindex="-1">集成微服务 <a class="header-anchor" href="#集成微服务" aria-label="Permalink to &quot;集成微服务&quot;">​</a></h4><p>现在，GrayLog的服务端日志收集器已经准备好，我们还需要在项目中添加GrayLog的客户端，将项目日志发送到GrayLog服务中，保存到ElasticSearch。 基本步骤如下：</p><ul><li>引入GrayLog客户端依赖</li><li>配置Logback，集成GrayLog的Appender</li><li>启动并测试</li></ul><p>这里，我们以work微服务为例，其他的类似。 导入依赖：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;biz.paluch.logging&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">groupId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;logstash-gelf&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">artifactId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.15.0&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>配置Logback，在配置文件中增加 GELF的appender：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。--&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。--&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;false&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scanPeriod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;60 seconds&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">springProperty</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scope</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;context&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;appName&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;spring.application.name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--文件名--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;logback.appname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${appName}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--文件位置--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">property</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;logback.logdir&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/data/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 定义控制台输出 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stdout&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">layout</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ch.qos.logback.classic.PatternLayout&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;%d{yyyy-MM-dd HH:mm:ss.SSS} - [%thread] - %-5level - %logger{50} - %msg%n&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">layout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FILE&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filter</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ch.qos.logback.classic.filter.ThresholdFilter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;DEBUG&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${logback.logdir}/\${logback.appname}/\${logback.appname}.log&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rollingPolicy</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">FileNamePattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${logback.logdir}/\${logback.appname}/\${logback.appname}.%d{yyyy-MM-dd}.log.zip&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">FileNamePattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;90&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maxHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">rollingPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">encoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;%d [%thread] %-5level %logger{36} %line - %msg%n&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">encoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GELF&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;biz.paluch.logging.gelf.logback.GelfLogbackAppender&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!--GrayLog服务地址--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;udp:192.168.150.101&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!--GrayLog服务端口--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;12201&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1.1&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!--当前服务名称--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">facility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;\${appName}&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">facility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">extractStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">extractStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filterStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">filterStackTrace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mdcProfiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;true&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mdcProfiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timestampPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;yyyy-MM-dd HH:mm:ss,SSS&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timestampPattern</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maximumMessageSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;8192&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">maximumMessageSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--evel:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，--&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!--不能设置为INHERITED或者同义词NULL。默认是DEBUG。--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">root</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INFO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stdout&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">appender-ref</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;GELF&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">configuration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>修改代码，<code>com.sl.ms.work.controller.TransportOrderController#findStatusCount()</code>进入打印日志便于查看数据，启动服务，点击search按钮即可看到日志数据： <img src="`+f+'" alt="image.png" loading="lazy"></p><h3 id="日志回收策略" tabindex="-1">日志回收策略 <a class="header-anchor" href="#日志回收策略" aria-label="Permalink to &quot;日志回收策略&quot;">​</a></h3><p>到此graylog的基础配置就算完成了，已经可以收到日志数据。 但是在实际工作中，服务日志会非常多，这么多的日志，如果不进行存储限制，那么不久就会占满磁盘，查询变慢等等，而且过久的历史日志对于实际工作中的有效性也会很低。 Graylog则自身集成了日志数据限制的配置，可以通过如下进行设置： <img src="'+Q+'" alt="image.png" loading="lazy"></p><p>选择<code>Default index set</code>的<code>Edit</code>按钮： <img src="'+B+'" alt="image.png" loading="lazy"></p><p>GrayLog有3种日志回收限制，触发以后就会开始回收空间，删除索引： <img src="'+D+'" alt="image.png" loading="lazy"></p><p>分别是：</p><ul><li><code>Index Message Count</code>：按照日志数量统计，默认超过<code>20000000</code>条日志开始清理 <ul><li>我们测试时，设置<code>100000</code>即可</li></ul></li><li><code>Index Size</code>：按照日志大小统计，默认超过<code>1GB</code>开始清理</li><li><code>Index Message Count</code>：按照日志日期清理，默认日志存储1天</li></ul><h3 id="搜索语法" tabindex="-1">搜索语法 <a class="header-anchor" href="#搜索语法" aria-label="Permalink to &quot;搜索语法&quot;">​</a></h3><p>在search页面，可以完成基本的日志搜索功能： <img src="'+q+`" alt="image.png" loading="lazy"></p><h4 id="搜索语法-1" tabindex="-1">搜索语法 <a class="header-anchor" href="#搜索语法-1" aria-label="Permalink to &quot;搜索语法&quot;">​</a></h4><p>搜索语法非常简单，输入关键字或指定字段进行搜索：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#不指定字段，默认从message字段查询</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">输入：undo</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#输入两个关键字，关系为or</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">undo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 统计</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#加引号是需要完整匹配</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;undo 统计&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#指定字段查询，level表示日志级别，ERROR（3）、WARNING（4）、NOTICE（5）、INFO（6）、DEBUG（7）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">level:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#或条件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">level:(6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OR </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>更多查询官网文档：<a href="https://docs.graylog.org/docs/query-language" target="_blank" rel="noreferrer">https://docs.graylog.org/docs/query-language</a></p><h4 id="自定义展示字段" tabindex="-1">自定义展示字段 <a class="header-anchor" href="#自定义展示字段" aria-label="Permalink to &quot;自定义展示字段&quot;">​</a></h4><p><img src="`+w+'" alt="image.png" loading="lazy"></p><p>效果如下： <img src="'+L+'" alt="image.png" loading="lazy"></p><h3 id="日志统计仪表盘" tabindex="-1">日志统计仪表盘 <a class="header-anchor" href="#日志统计仪表盘" aria-label="Permalink to &quot;日志统计仪表盘&quot;">​</a></h3><p>GrayLog支持把日志按照自己需要的方式形成统计报表，并把许多报表组合一起，形成DashBoard（仪表盘），方便对日志统计分析。</p><h4 id="创建仪表盘" tabindex="-1">创建仪表盘 <a class="header-anchor" href="#创建仪表盘" aria-label="Permalink to &quot;创建仪表盘&quot;">​</a></h4><p><img src="'+v+'" alt="image.png" loading="lazy"></p><p><img src="'+S+'" alt="image.png" loading="lazy"></p><p><img src="'+G+'" alt="image.png" loading="lazy"></p><p>可以设置各种指标： <img src="'+P+'" alt="image.png" loading="lazy"></p><p><img src="'+x+'" alt="image.png" loading="lazy"></p><p><img src="'+O+'" alt="image.png" loading="lazy"></p><p><img src="'+R+'" alt="image.png" loading="lazy"></p><p>最终效果： <img src="'+M+'" alt="image.png" loading="lazy"></p><p>官方给出的效果： <img src="'+I+'" alt="dashboardexamplev2.png" loading="lazy"></p><h2 id="链路追踪" tabindex="-1">链路追踪 <a class="header-anchor" href="#链路追踪" aria-label="Permalink to &quot;链路追踪&quot;">​</a></h2><h3 id="apm" tabindex="-1">APM <a class="header-anchor" href="#apm" aria-label="Permalink to &quot;APM&quot;">​</a></h3><h4 id="什么是apm" tabindex="-1">什么是APM <a class="header-anchor" href="#什么是apm" aria-label="Permalink to &quot;什么是APM&quot;">​</a></h4><p>随着微服务架构的流行，一次请求往往需要涉及到多个服务，因此服务性能监控和排查就变得更复杂</p><ul><li>不同的服务可能由不同的团队开发、甚至可能使用不同的编程语言来实现</li><li>服务有可能布在了几千台服务器，横跨多个不同的数据中心</li></ul><p>因此，就需要一些可以帮助理解系统行为、用于分析性能问题的工具，以便发生故障的时候，能够快速定位和解决问题，这就是APM系统，全称是（<strong>A</strong>pplication <strong>P</strong>erformance <strong>M</strong>onitor，当然也有叫 <strong>A</strong>pplication <strong>P</strong>erformance <strong>M</strong>anagement tools） APM最早是谷歌公开的论文提到的 <a href="http://bigbully.github.io/Dapper-translation" target="_blank" rel="noreferrer">Google Dapper</a>。Dapper是Google生产环境下的分布式跟踪系统，自从Dapper发展成为一流的监控系统之后，给google的开发者和运维团队帮了大忙，所以谷歌公开论文分享了Dapper。</p><h4 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h4><p>先来看一次请求调用示例：</p><ol><li>包括：前端（A），两个中间层（B和C），以及两个后端（D和E）</li><li>当用户发起一个请求时，首先到达前端A服务，然后分别对B服务和C服务进行RPC调用；</li><li>B服务处理完给A做出响应，但是C服务还需要和后端的D服务和E服务交互之后再返还给A服务，最后由A服务来响应用户的请求；</li></ol><p><img src="'+z+`" alt="image.png" loading="lazy"></p><p>如何才能实现跟踪呢？需要明白下面几个概念：</p><ul><li>探针：负责在客户端程序运行时收集服务调用链路信息，发送给收集器</li><li>收集器：负责将数据格式化，保存到存储器</li><li>存储器：保存数据</li><li>UI界面：统计并展示</li></ul><p>探针会在链路追踪时记录每次调用的信息，Span是<strong>基本单元</strong>，一次链路调用（可以是RPC，DB等没有特定的限制）创建一个span，通过一个64位ID标识它；同时附加（Annotation）作为payload负载信息，用于记录性能等数据。 一个Span的基本数据结构：</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">type Span </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TraceID    int64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 用于标示一次完整的请求id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Name       string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ID         int64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 当前这次调用span_id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ParentID   int64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 上层服务的调用span_id  最上层服务parent_id为null，代表根服务root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Annotation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Annotation</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 记录性能等数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Debug      </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>一次请求的每个链路，通过spanId、parentId就能串联起来： <img src="`+N+'" alt="image.png" loading="lazy"></p><p>当然，从请求到服务器开始，服务器返回response结束，每个span存在相同的唯一标识trace_id。</p><h4 id="技术选型" tabindex="-1">技术选型 <a class="header-anchor" href="#技术选型" aria-label="Permalink to &quot;技术选型&quot;">​</a></h4><p>市面上的全链路监控理论模型大多都是借鉴Google Dapper论文，重点关注以下三种APM组件：</p><ul><li><a href="https://link.juejin.im/?target=http%3A%2F%2Fzipkin.io%2F" target="_blank" rel="noreferrer"><strong>Zipkin</strong></a>：由Twitter公司开源，开放源代码分布式的跟踪系统，用于收集服务的定时数据，以解决微服务架构中的延迟问题，包括：数据的收集、存储、查找和展现。</li><li><a href="https://pinpoint.com/" target="_blank" rel="noreferrer"><strong>Pinpoint</strong></a>：一款对Java编写的大规模分布式系统的APM工具，由韩国人开源的分布式跟踪组件。</li><li><a href="https://skywalking.apache.org/zh/" target="_blank" rel="noreferrer"><strong>Skywalking</strong></a>：国产的优秀APM组件，是一个对JAVA分布式应用程序集群的业务运行情况进行追踪、告警和分析的系统。现在是Apache的顶级项目之一。</li></ul><p>选项就是对比各个系统的使用差异，主要对比项：</p><ol><li><strong>探针的性能</strong> 主要是agent对服务的吞吐量、CPU和内存的影响。微服务的规模和动态性使得数据收集的成本大幅度提高。</li><li><strong>collector的可扩展性</strong> 能够水平扩展以便支持大规模服务器集群。</li><li><strong>全面的调用链路数据分析</strong> 提供代码级别的可见性以便轻松定位失败点和瓶颈。</li><li><strong>对于开发透明，容易开关</strong> 添加新功能而无需修改代码，容易启用或者禁用。</li><li><strong>完整的调用链应用拓扑</strong> 自动检测应用拓扑，帮助你搞清楚应用的架构</li></ol><p>三者对比如下：</p><table><thead><tr><th>对比项</th><th>zipkin</th><th>pinpoint</th><th>skywalking</th></tr></thead><tbody><tr><td>探针性能</td><td>中</td><td>低</td><td><strong>高</strong></td></tr><tr><td>collector扩展性</td><td><strong>高</strong></td><td>中</td><td><strong>高</strong></td></tr><tr><td>调用链路数据分析</td><td>低</td><td><strong>高</strong></td><td>中</td></tr><tr><td>对开发透明性</td><td>中</td><td><strong>高</strong></td><td><strong>高</strong></td></tr><tr><td>调用链应用拓扑</td><td>中</td><td><strong>高</strong></td><td>中</td></tr><tr><td>社区支持</td><td><strong>高</strong></td><td>中</td><td><strong>高</strong></td></tr></tbody></table><p>综上所述，使用skywalking是最佳的选择。</p><h3 id="skywalking简介" tabindex="-1">Skywalking简介 <a class="header-anchor" href="#skywalking简介" aria-label="Permalink to &quot;Skywalking简介&quot;">​</a></h3><p>SkyWalking创建与2015年，提供分布式追踪功能，是一个功能完备的APM系统。 官网地址：<a href="http://skywalking.apache.org/" target="_blank" rel="noreferrer">http://skywalking.apache.org/</a><img src="'+H+'" alt="image.png" loading="lazy"></p><p>主要的特征：</p><ul><li>多语言探针或类库 <ul><li>Java自动探针，追踪和监控程序时，不需要修改源码。</li><li>社区提供的其他多语言探针 <ul><li><a href="https://github.com/OpenSkywalking/skywalking-netcore" target="_blank" rel="noreferrer">.NET Core</a></li><li><a href="https://github.com/OpenSkywalking/skywalking-nodejs" target="_blank" rel="noreferrer">Node.js</a></li></ul></li></ul></li><li>多种后端存储： ElasticSearch， H2</li><li>支持OpenTracing <ul><li>Java自动探针支持和OpenTracing API协同工作</li></ul></li><li>轻量级、完善功能的后端聚合和分析</li><li>现代化Web UI</li><li>日志集成</li><li>应用、实例和服务的告警</li></ul><p>官方架构图： <img src="'+Z+`" alt="image.png" loading="lazy"></p><p>大致分四个部分：</p><ul><li>skywalking-oap-server：就是<strong>O</strong>bservability <strong>A</strong>nalysis <strong>P</strong>latform的服务，用来收集和处理探针发来的数据</li><li>skywalking-UI：就是skywalking提供的Web UI 服务，图形化方式展示服务链路、拓扑图、trace、性能监控等</li><li>agent：探针，获取服务调用的链路信息、性能信息，发送到skywalking的OAP服务</li><li>Storage：存储，一般选择elasticsearch</li></ul><p>因此我们安装部署也从这四个方面入手，目前elasticsearch已经安装完成，只需要部署其他3个即可。</p><h3 id="部署安装-1" tabindex="-1">部署安装 <a class="header-anchor" href="#部署安装-1" aria-label="Permalink to &quot;部署安装&quot;">​</a></h3><p>通过docker部署，需要部署两部分，分别是<code>skywalking-oap-server</code>和<code>skywalking-UI</code>。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#oap服务，需要指定Elasticsearch以及链接信息</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">oap </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12800</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:12800 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11800</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:11800 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SW_STORAGE=elasticsearch </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SW_STORAGE_ES_CLUSTER_NODES=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192.168</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.150.101:9200 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">apache/skywalking-oap-server:9.1.0</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#部署ui，需要指定oap服务</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">oap-ui </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">48080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:8080 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">SW_OAP_ADDRESS=http://192.168.150.101:12800 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">apache/skywalking-ui:9.1.0</span></span></code></pre></div><p>启动成功后，访问地址<a href="http://192.168.150.101:48080/" target="_blank" rel="noreferrer">http://192.168.150.101:48080/</a>，即可查看skywalking的ui界面。 <img src="`+j+'" alt="image.png" loading="lazy"></p><h3 id="微服务探针" tabindex="-1">微服务探针 <a class="header-anchor" href="#微服务探针" aria-label="Permalink to &quot;微服务探针&quot;">​</a></h3><p>现在，Skywalking的服务端已经启动完成，我们还需要在微服务中加入服务探针，来收集数据。 <img src="'+U+'" alt="image.png" loading="lazy"></p><p>将<code>skywalking-agent</code>解压到非中文目录。 在微服务中设置启动参数，以work微服务为例： <img src="'+V+`" alt="image.png" loading="lazy"></p><p>输入如下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-javaagent:F:\\code\\sl-express\\docs\\resources\\skywalking-agent\\skywalking-agent.jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-Dskywalking.agent.service_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ms::sl-express-ms-work</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-Dskywalking.collector.backend_service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=192.168.150.101:11800</span></span></code></pre></div><p>参数说明：</p>`,119),ps=s("li",null,"javaagent： 将skywalking-agent以代理的方式整合到微服务中",-1),hs={logic:"",name:""},ks={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},rs={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"13.739ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6072.8 1000","aria-hidden":"true"},gs=l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(477,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(928,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1413,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1985,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2488,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3088,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3617,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4495,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5238.8,0)"><g data-mml-node="text"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g><g data-mml-node="text" transform="translate(278,0)"><path data-c="3A" d="M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5794.8,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z" style="stroke-width:3;"></path></g></g></g>',1),ds=[gs],Es=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"g"),s("mi",null,"r"),s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"p"),s("mi",null,"n"),s("mi",null,"a"),s("mi",null,"m"),s("mi",null,"e")]),s("mo",null,"::"),s("mo",{stretchy:"false"},"]")])],-1),os=s("li",null,"skywalking.collector.backend_service：指定oap服务，注意端口要走11800",-1),cs=l('<p>设置完成后，重新启动work微服务，多请求几次接口，即可自oap-ui中看到数据。 <img src="'+W+'" alt="image.png" loading="lazy"></p><p><img src="'+Y+'" alt="image.png" loading="lazy"></p><p>查看链路： <img src="'+$+'" alt="image.png" loading="lazy"></p><p>服务关系拓扑图： <img src="'+J+`" alt="image.png" loading="lazy"></p><h3 id="整合到docker服务" tabindex="-1">整合到docker服务 <a class="header-anchor" href="#整合到docker服务" aria-label="Permalink to &quot;整合到docker服务&quot;">​</a></h3><p>前面的测试是在本地测试，如何将SkyWalking整合到docker服务中呢？ 这里以<code>sl-express-ms-web-courier</code>为例，其他的服务类似。 第一步，修改Dockerfile文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#FROM openjdk:11-jdk</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#修改为基于整合了skywalking的镜像，其他的不需要动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FROM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache/skywalking-java-agent:8.11.0-java11</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LABEL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maintainer=&quot;研究院研发组 &lt;research@itcast.cn&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 时区修改为东八区</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENV</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RUN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln -snf /usr/share/zoneinfo/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$TZ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TZ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/timezone</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WORKDIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /app</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ARG</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JAR_FILE=target/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.jar</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${JAR_FILE} </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">app.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">EXPOSE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8080</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ENTRYPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;java -Djava.security.egd=file:/dev/./urandom -jar </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAVA_OPTS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.jar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>第二步，在Jenkins中编辑修改配置： <code>名称：skywalkingServiceName 值：ms::sl-express-ms-web-courier</code><img src="`+X+'" alt="image.png" loading="lazy"></p><p><code>名称：skywalkingBackendService 值：192.168.150.101:11800</code><img src="'+K+'" alt="image.png" loading="lazy"></p><p>修改运行脚本，增加系统环境变量： <code>-e SW_AGENT_NAME=${skywalkingServiceName} -e SW_AGENT_COLLECTOR_BACKEND_SERVICES=${skywalkingBackendService}</code><img src="'+ss+'" alt="image.png" loading="lazy"></p><p>第三步，重新部署服务： <img src="'+is+'" alt="image.png" loading="lazy"></p><p>第四步，测试接口，查看数据。 <img src="'+as+'" alt="image.png" loading="lazy"></p><p><img src="'+ls+'" alt="image.png" loading="lazy"></p><h2 id="练习" tabindex="-1">练习 <a class="header-anchor" href="#练习" aria-label="Permalink to &quot;练习&quot;">​</a></h2><h3 id="练习1" tabindex="-1">练习1 <a class="header-anchor" href="#练习1" aria-label="Permalink to &quot;练习1&quot;">​</a></h3><p>难度系数：★★☆☆☆ 描述：修改所有微服务中的<code>logback-spring.xml</code>完成Graylog的整合。</p><h3 id="练习2" tabindex="-1">练习2 <a class="header-anchor" href="#练习2" aria-label="Permalink to &quot;练习2&quot;">​</a></h3><p>难度系数：★★★★☆ 描述：将所有的微服务与skywalking整合。</p>',18);function ys(i,Fs,ms,us,Cs,Ts){const k=e("ArticleMetadata"),r=e("ClientOnly");return a(),p("div",null,[ts,d(r,null,{default:E(()=>{var n,t;return[(((n=i.$frontmatter)==null?void 0:n.aside)??!0)&&(((t=i.$frontmatter)==null?void 0:t.showArticleMetadata)??!0)?(a(),o(k,{key:0,article:i.$frontmatter},null,8,["article"])):c("",!0)]}),_:1}),es,s("ul",null,[ps,s("li",hs,[h("skywalking.agent.service_name：指定服务名称，格式：["),s("mjx-container",ks,[(a(),p("svg",rs,ds)),Es])]),os]),cs])}const As=g(ns,[["render",ys]]);export{_s as __pageData,As as default};
