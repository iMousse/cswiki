import{_ as h,E as n,c as k,J as r,w as E,m as l,a as g,V as d,o as t,b as c,e as o}from"./chunks/framework.syB9hai_.js";const y="/cswiki/assets/1672210026851-5c09d3ce-bb7e-4140-9aef-b0c2278011c6.jlBiWu_q.png",m="/cswiki/assets/1672210072295-617c5616-0a60-476a-9205-2c69b2f04586.Hbe8b-mo.png",F="/cswiki/assets/1672212699428-a143ccc0-ecda-4bac-8b83-12db7ba3dced.kdyuXeaq.png",b="/cswiki/assets/1672212719033-637cef91-7ee6-42d3-81fc-fa6d4b7e150b.3T2JjFpD.png",_="/cswiki/assets/1672212787844-163d592f-82ed-44f2-8bdd-892f08cf67a1.ompYUpmf.png",f="/cswiki/assets/1672213032095-b513d947-5df4-498a-b3d4-111655e7f542.6AaxaA8S.png",u="/cswiki/assets/1672213224083-014a2152-bf8e-40db-88c0-4b9bd847702a.BC2raJiv.png",C="/cswiki/assets/1672213308896-2b56b7e1-b32d-4289-9f2f-ac16daae5cfd.M7RBlewY.png",A="/cswiki/assets/1672216872852-e3210595-d8e7-42df-a760-b407e15d4958.S2EOCg1o.png",B="/cswiki/assets/1672217494669-37bdb4af-0619-4a61-9a42-3898853da928.RJKSO4go.png",w="/cswiki/assets/1672223285357-27f76741-9473-4e8b-b9bb-e1a42d12264c.r03tcJkG.png",D="/cswiki/assets/1672223317069-8c6b59ff-c8e7-41db-ab74-f99b69910e3f.a2uvi-oc.png",v="/cswiki/assets/1672223360964-ab5618bd-4ea4-463d-ba05-f6a5332c7bdf.vVbfPgmU.png",R="/cswiki/assets/1672223417593-c9b31c2b-f992-4450-8172-c4dac017e558.krdwTTyT.png",q="/cswiki/assets/1672223459770-ce14e0e4-340b-4693-a760-e2f275f2b29e.JodhndIL.png",S="/cswiki/assets/1672223518390-c7dcce43-1370-43a3-a2b5-0d7c5b027a6b.L_XlaAMy.png",x="/cswiki/assets/1672223565505-b93b653f-ad2e-4314-a729-9d209a779b12.s9pBvCo1.png",z="/cswiki/assets/1672224209134-2f2c031e-0c2e-434d-9fae-ee946a064439.XG2gDHTq.png",P="/cswiki/assets/1672224358557-000ee2c1-392b-4a41-8273-c21203d3843b.ODsk1uca.png",V="/cswiki/assets/1672224408294-2b9a586f-bdb6-4a21-a69c-1325b87cda7a.PmQYaOCl.png",N="/cswiki/assets/1666082052978-b1cdc9f0-9831-415c-91fa-55bbec63c8f2.oloGB55Q.png",j="/cswiki/assets/1666082822936-8abbd126-8c4b-4e02-ad5a-4ca5c4e12e44.M-bqQTsn.png",G="/cswiki/assets/1666082977858-38849f07-3112-4c0b-9058-e989b5fb58ad.mmzcCPpV.png",O="/cswiki/assets/1666083012252-db5ad7cc-68cf-4943-8af1-e5ad9ffe3ec0.SpzReHPT.png",M="/cswiki/assets/1666083048608-08e392c6-426a-4794-abea-566f78431be6.oZPaiPil.png",$="/cswiki/assets/1666796771252-549b88a6-c41d-44b0-a7d6-f56753a4f902.2x3OGSMl.png",T="/cswiki/assets/1666086804481-271ff5ec-8328-437f-baaa-990c6cec55cc.S1G5KhSR.png",I="/cswiki/assets/1666086915604-93ab78eb-fa7f-4943-b447-5bc91f898a1b.abGTngjn.png",J="/cswiki/assets/1666087117309-34ab0053-42c7-4d53-a153-fdbf08f9a92c.tCY4IuPb.png",U="/cswiki/assets/1666087670046-af8e37f9-6cd0-435f-93a8-6dcc1d8bf60e.bWatFflq.png",L="/cswiki/assets/1666088371030-e7a02156-1628-422d-bb22-e17880a327c0.lbG1MS7h.png",H="/cswiki/assets/1666088396227-c20932d6-ed8e-45f1-8363-75c026878caa.1DDsTPzs.png",Y="/cswiki/assets/1666088428155-39d52547-94de-4d91-9414-241a17b338f6.69KKNgVV.png",K="/cswiki/assets/1666088451139-ee29c78c-7d5a-4e69-921c-45cc8f907c68.Uk4P8-cj.png",X="/cswiki/assets/1666094236717-cee34e71-9eb3-4697-bd72-4b6168e4038d.sVMA8-OP.png",W="/cswiki/assets/1666094259231-cd5432d0-c288-4cc9-b9e8-99ddf3f97baf.4PqdlqAi.png",Q="/cswiki/assets/1677721099105-43b860fd-8057-46fb-827d-697d23a66e03.7wwUqWBo.png",Z="/cswiki/assets/1677721897213-44032d06-29c7-415c-9de9-a93c4ea10b6a.3qTtRvGa.png",ss="/cswiki/assets/1678606318315-9c8c183e-99ce-4a74-92ef-79db890eecab.d0AtkaGh.png",is="/cswiki/assets/1678606702403-2cd42a0c-d2ab-46ef-95e2-9bd832702733.1COLuI8C.png",as="/cswiki/assets/1678606999353-59b261f0-1660-46f8-ad20-323bb76c2f0a.yP3Gs9pD.png",ns="/cswiki/assets/1678607204992-61f21f8d-1f08-422c-a4bf-97640667aba7.boang7i5.png",ls="/cswiki/assets/1678607334882-e3288903-3956-4c65-a13d-9186d0d0a590.Owu2Lfn7.png",ts="/cswiki/assets/1666094397961-e1141f78-8d06-417a-a81a-8ec672666f33.dksFTTek.png",es="/cswiki/assets/1666096686586-339fcd7b-cad6-49c4-992d-e93d4ca9c9a0.dhtqGtRd.png",ps="/cswiki/assets/1666096747049-143afd57-3549-482d-856d-6a36af4a3727.L2cnFdtq.png",hs="/cswiki/assets/1666096821007-90b5cfce-a6bd-4979-99aa-91aba65772c7.fRcurvUb.png",ks="/cswiki/assets/1666097103984-ff98e9ab-d196-4c5e-9ca9-aad7d80405aa.e2m2nU7-.png",rs="/cswiki/assets/1666098383387-549c2872-5327-4830-b8ff-a74456799ed6.GnqulpR5.png",Es="/cswiki/assets/1666098487931-f57d9677-2de2-4647-bb42-4ff9fc755da0.iZ2S8nSs.png",gs="/cswiki/assets/1666098524587-05dbe2bf-ea7c-4195-bbcf-e21ec02688f9.rtIhyeVg.png",ds="/cswiki/assets/1666098569834-bdefa479-5906-4177-9301-949b2531e314.L7GndXEL.png",cs="/cswiki/assets/1666098654094-6b100778-a834-4a2f-8915-9ea027d8cc01.NizHSqY-.png",os="/cswiki/assets/1666099328254-3ef3aaea-3625-4746-9bce-4de51e18d11e-20240312102623583.UHdPp_OV.png",ws=JSON.parse('{"title":"持续集成","description":"","frontmatter":{},"headers":[],"relativePath":"src/project/express/10-持续集成.md","filePath":"src/project/express/10-持续集成.md","lastUpdated":1730648753000}'),ys={name:"src/project/express/10-持续集成.md"},ms=l("h1",{id:"持续集成",tabindex:"-1"},[g("持续集成 "),l("a",{class:"header-anchor",href:"#持续集成","aria-label":'Permalink to "持续集成"'},"​")],-1),Fs=d('<nav class="table-of-contents"><ul><li><a href="#持续集成">持续集成</a><ul><li><a href="#jenkins介绍">Jenkins介绍</a></li><li><a href="#部署安装">部署安装</a></li><li><a href="#系统配置">系统配置</a><ul><li><a href="#配置maven">配置Maven</a></li><li><a href="#配置git">配置Git</a></li><li><a href="#安装gogs插件">安装Gogs插件</a></li></ul></li><li><a href="#构建任务">构建任务</a></li><li><a href="#前端部署">前端部署</a><ul><li><a href="#说明">说明</a><ul><li><a href="#用户端">用户端</a></li></ul></li><li><a href="#开发者工具">开发者工具</a></li><li><a href="#申请测试账号">申请测试账号</a></li><li><a href="#导入代码">导入代码</a><ul><li><a href="#快递员端">快递员端</a></li></ul></li><li><a href="#模拟器">模拟器</a><ul><li><a href="#联想模拟器">联想模拟器</a></li><li><a href="#官方模拟器">官方模拟器</a></li></ul></li><li><a href="#启动服务">启动服务</a></li><li><a href="#快递员端-1">快递员端</a></li><li><a href="#司机端">司机端</a><ul><li><a href="#pc管理端">pc管理端</a></li></ul></li></ul></li></ul></li></ul></nav><h2 id="jenkins介绍" tabindex="-1">Jenkins介绍 <a class="header-anchor" href="#jenkins介绍" aria-label="Permalink to &quot;Jenkins介绍&quot;">​</a></h2><p><img src="'+y+'" alt="image.png" loading="lazy"> Jenkins 是一款流行的开源持续集成（Continuous Integration）工具，广泛用于项目开发，具有自动化构建、测试和部署等功能。官网： <a href="http://jenkins-ci.org/" target="_blank" rel="noreferrer">http://jenkins-ci.org/</a>。 Jenkins的特征：</p><ul><li>开源的 Java语言开发持续集成工具，支持持续集成，持续部署。</li><li>易于安装部署配置：可通过 yum安装,或下载war包以及通过docker容器等快速实现安装部署，可方便web界面配置管理。</li><li>消息通知及测试报告：集成 RSS/E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知，生成JUnit/TestNG测试报告。</li><li>分布式构建：支持 Jenkins能够让多台计算机一起构建/测试。</li><li>文件识别： Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等。</li><li>丰富的插件支持：支持扩展插件，你可以开发适合自己团队使用的工具，如 git，svn，maven，docker等。</li></ul><p>Jenkins安装和持续集成环境配置 <img src="'+m+`" alt="image.png" loading="lazy"></p><ul><li>首先，开发人员每天进行代码提交，提交到Git仓库</li><li>然后，Jenkins作为持续集成工具，使用Git工具到Git仓库拉取代码到集成服务器，再配合JDK，Maven等软件完成代码编译，代码测试与审查，测试，打包等工作，在这个过程中每一步出错，都重新再执行一次整个流程。</li><li>最后，Jenkins把生成的jar或war包分发到测试服务器或者生产服务器，测试人员或用户就可以访问应用。</li></ul><h2 id="部署安装" tabindex="-1">部署安装 <a class="header-anchor" href="#部署安装" aria-label="Permalink to &quot;部署安装&quot;">​</a></h2><p>在神领物流项目中采用Docker方式部署Jenkins，部署脚本如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8090</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:8080 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:50000 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/local/src/jenkins:/var/jenkins_home </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/maven:/maven </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/localtime:/etc/localtime </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/bin/docker:/usr/bin/docker </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/run/docker.sock:/var/run/docker.sock </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--privileged </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jenkins </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">TZ=Asia/Shanghai </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--restart=always </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--add-host=git.sl-express.com:192.168.150.101 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--add-host=maven.sl-express.com:192.168.150.101 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jenkins/jenkins:lts-jdk11</span></span></code></pre></div><p>在部署脚本中指定了时区、hosts并且将宿主机的docker服务映射到容器内部。 访问地址：<a href="http://jenkins.sl-express.com/" target="_blank" rel="noreferrer">http://jenkins.sl-express.com/</a> 用户名密码为：root/123</p><h2 id="系统配置" tabindex="-1">系统配置 <a class="header-anchor" href="#系统配置" aria-label="Permalink to &quot;系统配置&quot;">​</a></h2><p>Jenkins安装完成后，需要进行一些配置才能正常使用。</p><h3 id="配置maven" tabindex="-1">配置Maven <a class="header-anchor" href="#配置maven" aria-label="Permalink to &quot;配置Maven&quot;">​</a></h3><p><img src="`+F+'" alt="image.png" loading="lazy"><img src="'+b+'" alt="image.png" loading="lazy"> 在【系统管理】中的【全局工具配置】中进行配置。 指定Maven配置文件： <img src="'+_+`" alt="image.png" loading="lazy"> 配置文件内容如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    xmlns:xsi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          xsi:schemaLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">localRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;/maven/repository&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">localRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pluginGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">pluginGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;sl-releases&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;deployment&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;deployment123&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;sl-snapshots&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;deployment&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;deployment123&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;mirror&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirrorOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;central,jcenter,!sl-releases,!sl-snapshots&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirrorOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;mirror&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;https://maven.aliyun.com/nexus/content/groups/public&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirror</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mirrors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">profiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;sl&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">altReleaseDeploymentRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					sl-releases::default::http://maven.sl-express.com/nexus/content/repositories/releases/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">altReleaseDeploymentRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">altSnapshotDeploymentRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					sl-snapshots::default::http://maven.sl-express.com/nexus/content/repositories/snapshots/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">altSnapshotDeploymentRepository</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">profiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">activeProfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">activeProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;sl&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">activeProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">activeProfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="配置git" tabindex="-1">配置Git <a class="header-anchor" href="#配置git" aria-label="Permalink to &quot;配置Git&quot;">​</a></h3><p><img src="`+f+'" alt="image.png" loading="lazy"></p><h3 id="安装gogs插件" tabindex="-1">安装Gogs插件 <a class="header-anchor" href="#安装gogs插件" aria-label="Permalink to &quot;安装Gogs插件&quot;">​</a></h3><p>我们使用的Git管理工具是Gogs，需要在用户提交代码之后触发自动构建，需要安装Gogs插件。 <img src="'+u+'" alt="image.png" loading="lazy"> 搜索Gogs安装即可。 <img src="'+C+'" alt="image.png" loading="lazy"> 在Gogs中的仓库设置钩子，例如： <img src="'+A+'" alt="image.png" loading="lazy"> 格式：<code>http://jenkins.sl-express.com/gogs-webhook/?job=xxxx</code></p><h2 id="构建任务" tabindex="-1">构建任务 <a class="header-anchor" href="#构建任务" aria-label="Permalink to &quot;构建任务&quot;">​</a></h2><p>在提供的虚拟机环境中虽然已经创建好了构建任务，如果不满足需求，可以执行创建任务，可以通过复制的方式完成。 首先点击【新建任务】： <img src="'+B+'" alt="image.png" loading="lazy"> 输入任务的名称，建议名称就是微服务的名字。 <img src="'+w+'" alt="image.png" loading="lazy"> 选择已有的构建任务： <img src="'+D+'" alt="image.png" loading="lazy"> 输入任务的名称： <img src="'+v+'" alt="image.png" loading="lazy"> 设置Gogs钩子： <img src="'+R+'" alt="image.png" loading="lazy"> 设置构建参数，主要用于构建时的脚本使用： <img src="'+q+'" alt="image.png" loading="lazy"> 设置git地址，每个项目都不一样，一定要修改！ <img src="'+S+'" alt="image.png" loading="lazy"> 设置构建开始前将workspace删除，确保没有之前编译产物的干扰： <img src="'+x+'" alt="image.png" loading="lazy"> 设置ssh执行命令，主要是宿主机安装的docker服务具备权限，可以在容器内执行： <img src="'+z+'" alt="image.png" loading="lazy"> 设置maven打包命令： <img src="'+P+'" alt="image.png" loading="lazy"> 设置部署的ssh脚本，主要是完成微服务打包成docker镜像进行部署： <img src="'+V+`" alt="image.png" loading="lazy"> 执行命令如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 微服务名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SERVER_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${serverName}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 服务版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SERVER_VERSION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${version}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 服务版本</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SERVER_PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 源jar名称，mvn打包之后，target目录下的jar包名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JAR_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## jenkins下的目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">JENKINS_HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/jenkins_home/workspace/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $JENKINS_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## 修改文件权限</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$JAR_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;---------停止容器（</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">）---------&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;---------删除容器（</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">）---------&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;---------删除镜像（</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">）---------&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rmi </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;---------打包镜像（</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">）---------&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build -t </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;---------运行服务---------&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -d -p </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_PORT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:8080 --name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SERVER_PORT=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8080</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -e SPRING_CLOUD_NACOS_DISCOVERY_IP=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${SPRING_CLOUD_NACOS_DISCOVERY_IP} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  SPRING_CLOUD_NACOS_DISCOVERY_PORT=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${port} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SPRING_PROFILES_ACTIVE=stu </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$SERVER_VERSION</span></span></code></pre></div><p>最后，保存即可。</p><h2 id="前端部署" tabindex="-1">前端部署 <a class="header-anchor" href="#前端部署" aria-label="Permalink to &quot;前端部署&quot;">​</a></h2><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>前端包括4个端，分别是：</p><ul><li>用户端（微信小程序）</li><li>快递员端（安卓app）</li><li>司机端（安卓app）</li><li>后台管理端（pc web）</li></ul><h4 id="用户端" tabindex="-1">用户端 <a class="header-anchor" href="#用户端" aria-label="Permalink to &quot;用户端&quot;">​</a></h4><h3 id="开发者工具" tabindex="-1">开发者工具 <a class="header-anchor" href="#开发者工具" aria-label="Permalink to &quot;开发者工具&quot;">​</a></h3><p>用户端是基于微信小程序开发的，首先需要下载并安装微信开发者工具： <img src="`+N+'" alt="image.png" loading="lazy"> 可以使用课程资料中提供的安装包或在线下载，<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/stable.html" target="_blank" rel="noreferrer">点击下载</a></p><h3 id="申请测试账号" tabindex="-1">申请测试账号 <a class="header-anchor" href="#申请测试账号" aria-label="Permalink to &quot;申请测试账号&quot;">​</a></h3><p>接下来，申请微信小程序的测试账号，<a href="https://mp.weixin.qq.com/wxamp/sandbox" target="_blank" rel="noreferrer">点击申请</a>，通过手机微信扫码进行操作。 <img src="'+j+'" alt="image.png" loading="lazy"> 申请成功后，进行登录，<a href="https://mp.weixin.qq.com/" target="_blank" rel="noreferrer">点击登录</a>，如下： <img src="'+G+'" alt="image.png" loading="lazy"> 通过手机微信进行扫码登录： <img src="'+O+'" alt="image.png" loading="lazy"> 即可看到测试账号信息： <img src="'+M+'" alt="image.png" loading="lazy"></p><p>需要将AppID和AppSecret保存到nacos配置中心的 <code>sl-express-ms-web-customer.properties</code>中： <img src="'+$+'" alt="image.png" loading="lazy"></p><h3 id="导入代码" tabindex="-1">导入代码 <a class="header-anchor" href="#导入代码" aria-label="Permalink to &quot;导入代码&quot;">​</a></h3><p>从git拉取代码，地址：<a href="http://git.sl-express.com/sl/project-wl-yonghuduan-uniapp-vue3" target="_blank" rel="noreferrer">http://git.sl-express.com/sl/project-wl-yonghuduan-uniapp-vue3</a><img src="'+T+'" alt="image.png" loading="lazy"> 打开微信开发者工具（需要通过手机上的微信客户端进行扫码登录，不要使用游客身份登录），导入代码，注意导入的目录为：<code>project-wl-yonghuduan-uniapp-vue3\\unpackage\\dist\\dev\\mp-weixin</code>，使用测试账号： <img src="'+I+'" alt="image.png" loading="lazy"> 导入完成后，需要修改<code>env.js</code>配置文件，将<code>baseUrl</code>变量设置为：<code>http://api.sl-express.com/customer</code>，此链接为与后端服务交互的地址，入口为网关地址：（修改完成后需要点击【编译】按钮进行重新编译） <img src="'+J+'" alt="image.png" loading="lazy"> 如果需要完成登录，需要确保如下服务保持启动状态： <img src="'+U+'" alt="image.png" loading="lazy"> 测试登录： <img src="'+L+'" alt="image.png" loading="lazy"><img src="'+H+'" alt="image.png" loading="lazy"><img src="'+Y+'" alt="image.png" loading="lazy"> 登录成功： <img src="'+K+'" alt="image.png" loading="lazy"></p><h4 id="快递员端" tabindex="-1">快递员端 <a class="header-anchor" href="#快递员端" aria-label="Permalink to &quot;快递员端&quot;">​</a></h4><p>司机和快递员端都是安卓app的，可以安装在手机或通过模拟器进行使用，这里介绍模拟器的方式进行使用。（如果使用手机的话，需要通过内网穿透的方式访问网关）</p><h3 id="模拟器" tabindex="-1">模拟器 <a class="header-anchor" href="#模拟器" aria-label="Permalink to &quot;模拟器&quot;">​</a></h3><h4 id="联想模拟器" tabindex="-1">联想模拟器 <a class="header-anchor" href="#联想模拟器" aria-label="Permalink to &quot;联想模拟器&quot;">​</a></h4><p>在Windows平台推荐使用【联想模拟器】，安装包在<code>资料\\软件包\\模拟器</code>中找到。（如果联想模拟器不能正常使用也可以使用其他的模拟器） 安装完成后，设置分辨率为【手机 720 * 1280】： <img src="'+X+'" alt="image.png" loading="lazy"> 效果如下：（安装apk直接拖入即可） <img src="'+W+'" alt="image.png" loading="lazy"> 模拟器中的共享目录： <img src="'+Q+'" alt="image.png" loading="lazy"> 在模拟器的定位功能中可以设定位置信息，主要用于app中获取定位，在项目用于车辆位置上报等场景： <img src="'+Z+'" alt="image.png" loading="lazy"></p><h4 id="官方模拟器" tabindex="-1">官方模拟器 <a class="header-anchor" href="#官方模拟器" aria-label="Permalink to &quot;官方模拟器&quot;">​</a></h4><p>如果使用的是苹果Mac电脑并且是M1、M2芯片的同学，可以安装官方的模拟器进行使用。 在资料文件夹中找到<code>android-emulator-m1-preview-v3.dmg</code>安装包，进行安装。 安装完成后，还不能安装apk，需要安装android-sdk，这里通过brew命令安装，首先安装brew，在命令控制台输入命令： <code>/bin/zsh -c &quot;$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot; </code> 推荐使用2号安装： <img src="'+ss+'" alt="image.png" loading="lazy"></p><blockquote><p>如果没有安装git，在提示框中选择安装即可。</p></blockquote><p><img src="'+is+`" alt="image.png" loading="lazy"> 执行命令立即生效：<code>source /Users/tianze/.zprofile</code> 接下来安装android-sdk：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#先安装android-sdk，再安装android-platform-tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install --cask android-sdk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install android-platform-tools</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#查看</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list android-sdk</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list android-platform-tools</span></span></code></pre></div><p>可以看到在<code>/opt/homebrew/Caskroom</code>目录下有<code>android-platform-tools</code>和<code>android-sdk</code>两个文件夹： <img src="`+as+'" alt="image.png" loading="lazy"> 在模拟器中设置adb路径：<code>/opt/homebrew/Caskroom/android-platform-tools/34.0.1/platform-tools/adb</code><img src="'+ns+'" alt="image.png" loading="lazy"> 设置完成后，即可拖入apk进行安装： <img src="'+ls+'" alt="image.png" loading="lazy"></p><h3 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务&quot;">​</a></h3><p>测试登录的话，需要确保如下的服务处于启动状态： <img src="'+ts+'" alt="image.png" loading="lazy"></p><h3 id="快递员端-1" tabindex="-1">快递员端 <a class="header-anchor" href="#快递员端-1" aria-label="Permalink to &quot;快递员端&quot;">​</a></h3><p>在app中设置接口地址：<code>http://192.168.150.101:9527/courier</code><img src="'+es+'" alt="image.png" loading="lazy"><img src="'+ps+'" alt="image.png" loading="lazy"> 使用正确的用户密码即可登录： <img src="'+hs+'" alt="image.png" loading="lazy"></p><h3 id="司机端" tabindex="-1">司机端 <a class="header-anchor" href="#司机端" aria-label="Permalink to &quot;司机端&quot;">​</a></h3><p>司机端与快递员端类似，需要配置url为：<code>http://192.168.150.101:9527/driver</code> 输入正确的用户名密码即可登录成功： <img src="'+ks+'" alt="image.png" loading="lazy"></p><h4 id="pc管理端" tabindex="-1">pc管理端 <a class="header-anchor" href="#pc管理端" aria-label="Permalink to &quot;pc管理端&quot;">​</a></h4><p>pc管理端是需要将前端开发的vue进行编译，发布成html，然后通过nginx进行访问，这个过程已经在Jenkins中配置，执行点击发布即可。 地址：<a href="http://jenkins.sl-express.com/view/%E5%89%8D%E7%AB%AF/job/project-slwl-admin-vue/" target="_blank" rel="noreferrer">http://jenkins.sl-express.com/view/%E5%89%8D%E7%AB%AF/job/project-slwl-admin-vue/</a><img src="'+rs+'" alt="image.png" loading="lazy"> vue打包命令： <img src="'+Es+'" alt="image.png" loading="lazy"> 将打包后的html等静态文件拷贝到指定目录下： <img src="'+gs+'" alt="image.png" loading="lazy"> nginx中的配置： <img src="'+ds+'" alt="image.png" loading="lazy"> nginx所在目录：<code>/usr/local/src/nginx/conf</code> 输入地址进行测试：<a href="http://admin.sl-express.com/#/login" target="_blank" rel="noreferrer">http://admin.sl-express.com/#/login</a><img src="'+cs+'" alt="image.png" loading="lazy"> 确保如下服务是启动状态： <img src="'+os+'" alt="image.png" loading="lazy"></p>',54);function bs(s,_s,fs,us,Cs,As){const e=n("ArticleMetadata"),p=n("ClientOnly");return t(),k("div",null,[ms,r(p,null,{default:E(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),c(e,{key:0,article:s.$frontmatter},null,8,["article"])):o("",!0)]}),_:1}),Fs])}const Ds=h(ys,[["render",bs]]);export{ws as __pageData,Ds as default};
